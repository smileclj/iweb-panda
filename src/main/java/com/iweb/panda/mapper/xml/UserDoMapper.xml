<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iweb.panda.mapper.UserDoMapper" >
  <resultMap id="BaseResultMap" type="com.iweb.panda.entity.UserDo" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="Amounts" property="amounts" jdbcType="DOUBLE" />
    <result column="City" property="city" jdbcType="VARCHAR" />
    <result column="Coins" property="coins" jdbcType="INTEGER" />
    <result column="Country" property="country" jdbcType="VARCHAR" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="LastLoginTime" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="Mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="NickName" property="nickname" jdbcType="VARCHAR" />
    <result column="Province" property="province" jdbcType="VARCHAR" />
    <result column="Sex" property="sex" jdbcType="INTEGER" />
    <result column="PaymentPwd" property="paymentpwd" jdbcType="VARCHAR" />
    <result column="UserType" property="usertype" jdbcType="VARCHAR" />
    <result column="realName" property="realname" jdbcType="VARCHAR" />
    <result column="idCard" property="idcard" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="empiricalValue" property="empiricalvalue" jdbcType="INTEGER" />
    <result column="vipEmpiricalValue" property="vipempiricalvalue" jdbcType="INTEGER" />
    <result column="diamond" property="diamond" jdbcType="INTEGER" />
    <result column="visible" property="visible" jdbcType="TINYINT" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.iweb.panda.entity.UserDo" extends="BaseResultMap" >
    <result column="HeadImgUrl" property="headimgurl" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, Amounts, City, Coins, Country, CreateTime, LastLoginTime, Mobile, NickName, Province, 
    Sex, PaymentPwd, UserType, realName, idCard, state, empiricalValue, vipEmpiricalValue, 
    diamond, visible, sign
  </sql>
  <sql id="Blob_Column_List" >
    HeadImgUrl
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.iweb.panda.entity.UserDoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.iweb.panda.entity.UserDoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iweb.panda.entity.UserDo" >
    insert into users (ID, Amounts, City, 
      Coins, Country, CreateTime, 
      LastLoginTime, Mobile, NickName, 
      Province, Sex, PaymentPwd, 
      UserType, realName, idCard, 
      state, empiricalValue, vipEmpiricalValue, 
      diamond, visible, sign, 
      HeadImgUrl)
    values (#{id,jdbcType=INTEGER}, #{amounts,jdbcType=DOUBLE}, #{city,jdbcType=VARCHAR}, 
      #{coins,jdbcType=INTEGER}, #{country,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{mobile,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{paymentpwd,jdbcType=VARCHAR}, 
      #{usertype,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{empiricalvalue,jdbcType=INTEGER}, #{vipempiricalvalue,jdbcType=INTEGER}, 
      #{diamond,jdbcType=INTEGER}, #{visible,jdbcType=TINYINT}, #{sign,jdbcType=VARCHAR}, 
      #{headimgurl,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iweb.panda.entity.UserDo" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="amounts != null" >
        Amounts,
      </if>
      <if test="city != null" >
        City,
      </if>
      <if test="coins != null" >
        Coins,
      </if>
      <if test="country != null" >
        Country,
      </if>
      <if test="createTime != null" >
        CreateTime,
      </if>
      <if test="lastLoginTime != null" >
        LastLoginTime,
      </if>
      <if test="mobile != null" >
        Mobile,
      </if>
      <if test="nickname != null" >
        NickName,
      </if>
      <if test="province != null" >
        Province,
      </if>
      <if test="sex != null" >
        Sex,
      </if>
      <if test="paymentpwd != null" >
        PaymentPwd,
      </if>
      <if test="usertype != null" >
        UserType,
      </if>
      <if test="realname != null" >
        realName,
      </if>
      <if test="idcard != null" >
        idCard,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="empiricalvalue != null" >
        empiricalValue,
      </if>
      <if test="vipempiricalvalue != null" >
        vipEmpiricalValue,
      </if>
      <if test="diamond != null" >
        diamond,
      </if>
      <if test="visible != null" >
        visible,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="headimgurl != null" >
        HeadImgUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="amounts != null" >
        #{amounts,jdbcType=DOUBLE},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="coins != null" >
        #{coins,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="paymentpwd != null" >
        #{paymentpwd,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="empiricalvalue != null" >
        #{empiricalvalue,jdbcType=INTEGER},
      </if>
      <if test="vipempiricalvalue != null" >
        #{vipempiricalvalue,jdbcType=INTEGER},
      </if>
      <if test="diamond != null" >
        #{diamond,jdbcType=INTEGER},
      </if>
      <if test="visible != null" >
        #{visible,jdbcType=TINYINT},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="headimgurl != null" >
        #{headimgurl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iweb.panda.entity.UserDoExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.iweb.panda.entity.UserDo" >
    update users
    <set >
      <if test="amounts != null" >
        Amounts = #{amounts,jdbcType=DOUBLE},
      </if>
      <if test="city != null" >
        City = #{city,jdbcType=VARCHAR},
      </if>
      <if test="coins != null" >
        Coins = #{coins,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        Country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        LastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null" >
        Mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        NickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        Province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        Sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="paymentpwd != null" >
        PaymentPwd = #{paymentpwd,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        UserType = #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idCard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="empiricalvalue != null" >
        empiricalValue = #{empiricalvalue,jdbcType=INTEGER},
      </if>
      <if test="vipempiricalvalue != null" >
        vipEmpiricalValue = #{vipempiricalvalue,jdbcType=INTEGER},
      </if>
      <if test="diamond != null" >
        diamond = #{diamond,jdbcType=INTEGER},
      </if>
      <if test="visible != null" >
        visible = #{visible,jdbcType=TINYINT},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="headimgurl != null" >
        HeadImgUrl = #{headimgurl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.iweb.panda.entity.UserDo" >
    update users
    set Amounts = #{amounts,jdbcType=DOUBLE},
      City = #{city,jdbcType=VARCHAR},
      Coins = #{coins,jdbcType=INTEGER},
      Country = #{country,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      LastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      Mobile = #{mobile,jdbcType=VARCHAR},
      NickName = #{nickname,jdbcType=VARCHAR},
      Province = #{province,jdbcType=VARCHAR},
      Sex = #{sex,jdbcType=INTEGER},
      PaymentPwd = #{paymentpwd,jdbcType=VARCHAR},
      UserType = #{usertype,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      idCard = #{idcard,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      empiricalValue = #{empiricalvalue,jdbcType=INTEGER},
      vipEmpiricalValue = #{vipempiricalvalue,jdbcType=INTEGER},
      diamond = #{diamond,jdbcType=INTEGER},
      visible = #{visible,jdbcType=TINYINT},
      sign = #{sign,jdbcType=VARCHAR},
      HeadImgUrl = #{headimgurl,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iweb.panda.entity.UserDo" >
    update users
    set Amounts = #{amounts,jdbcType=DOUBLE},
      City = #{city,jdbcType=VARCHAR},
      Coins = #{coins,jdbcType=INTEGER},
      Country = #{country,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      LastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      Mobile = #{mobile,jdbcType=VARCHAR},
      NickName = #{nickname,jdbcType=VARCHAR},
      Province = #{province,jdbcType=VARCHAR},
      Sex = #{sex,jdbcType=INTEGER},
      PaymentPwd = #{paymentpwd,jdbcType=VARCHAR},
      UserType = #{usertype,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      idCard = #{idcard,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      empiricalValue = #{empiricalvalue,jdbcType=INTEGER},
      vipEmpiricalValue = #{vipempiricalvalue,jdbcType=INTEGER},
      diamond = #{diamond,jdbcType=INTEGER},
      visible = #{visible,jdbcType=TINYINT},
      sign = #{sign,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>